diff --git a/CMakeLists.txt b/CMakeLists.txt
index 403dec6..484dc60 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,22 +15,34 @@ set(CMAKE_CXX_STANDARD 17 CACHE STRING "C++ standard to conform to")
 set(TPP_GPU "" CACHE STRING "Enables GPU runtime (default: '')")
 set_property(CACHE TPP_GPU PROPERTY STRINGS "" "cuda" "vulkan")
 
-find_package(MLIR REQUIRED CONFIG)
+if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR OR TORCH_MLIR_OUT_OF_TREE_BUILD)
+  message(STATUS "TPP-MLIR out-of-tree build.")
+
+  find_package(MLIR REQUIRED CONFIG)
+  message(STATUS "Using MLIRConfig.cmake in: ${MLIR_DIR}")
+  message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")
+
+  set(LLVM_RUNTIME_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/bin)
+  set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/lib)
+
+  list(APPEND CMAKE_MODULE_PATH "${MLIR_CMAKE_DIR}")
+  list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
+  include(TableGen)
+  include(AddLLVM)
+  include(AddMLIR)
+  include(HandleLLVMOptions)
+else()
+  message(STATUS "TPP-MLIR in-tree build.")
+
+  set(MLIR_MAIN_SRC_DIR ${LLVM_MAIN_SRC_DIR}/../mlir)
+  set(MLIR_INCLUDE_DIR ${LLVM_MAIN_SRC_DIR}/../mlir/include)
+  set(MLIR_GENERATED_INCLUDE_DIR ${LLVM_BINARY_DIR}/tools/mlir/include)
+  set(MLIR_INCLUDE_DIRS "${MLIR_INCLUDE_DIR};${MLIR_GENERATED_INCLUDE_DIR}")
+endif()
 
-set(LLVM_RUNTIME_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/bin)
-set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/lib)
 set(MLIR_BINARY_DIR ${CMAKE_BINARY_DIR})
-message(STATUS "Using MLIRConfig.cmake in: ${MLIR_DIR}")
-message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")
-list(APPEND CMAKE_MODULE_PATH "${MLIR_CMAKE_DIR}")
-list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/modules")
 
-include(TableGen)
-include(AddLLVM)
-include(AddMLIR)
-include(HandleLLVMOptions)
-
 set(TPP_MAIN_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/include")
 set(TPP_GEN_INCLUDE_DIR "${PROJECT_BINARY_DIR}/include")
 
@@ -140,4 +152,4 @@ add_custom_target(check-clang  ${CI_DIR}/lint-clang.sh)
 add_custom_target(check-format DEPENDS check-clang check-python)
 
 # Check-all is just check, for now
-add_custom_target(check-all DEPENDS check)
+add_custom_target(tpp-check-all DEPENDS tpp-check)
diff --git a/README.md b/README.md
index f62fa5d..bd4ad52 100644
--- a/README.md
+++ b/README.md
@@ -88,7 +88,7 @@ cmake -G Ninja .. \
    -DLLVM_EXTERNAL_LIT=$CUSTOM_LLVM_ROOT/bin/llvm-lit \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ 
-cmake --build . --target check-all
+cmake --build . --target tpp-check-all
 
 popd
 ```
diff --git a/cmake/modules/xsmm.cmake b/cmake/modules/xsmm.cmake
index 6207eeb..e1d7417 100644
--- a/cmake/modules/xsmm.cmake
+++ b/cmake/modules/xsmm.cmake
@@ -32,12 +32,12 @@ endif()
 
 set(XSMM_INCLUDE_DIRS ${LIBXSMMROOT}/include)
 
-add_library(xsmm STATIC ${XSMM_SRCS})
-target_include_directories(xsmm PUBLIC ${XSMM_INCLUDE_DIRS})
-target_compile_definitions(xsmm PRIVATE
-  __BLAS=0
+add_mlir_library(xsmm STATIC ${XSMM_SRCS})
+target_include_directories(xsmm PUBLIC
+  $<BUILD_INTERFACE:${XSMM_INCLUDE_DIRS}>
+  $<INSTALL_INTERFACE:include/xsmm>
 )
-add_definitions(-DLIBXSMM_DEFAULT_CONFIG -U_DEBUG)
+add_definitions(-DLIBXSMM_DEFAULT_CONFIG -U_DEBUG -D__BLAS=0)
 
 set_property(TARGET xsmm PROPERTY COMPILE_WARNING_AS_ERROR ON)
 
diff --git a/lib/TPP/CMakeLists.txt b/lib/TPP/CMakeLists.txt
index 9bf837f..0f51465 100644
--- a/lib/TPP/CMakeLists.txt
+++ b/lib/TPP/CMakeLists.txt
@@ -19,6 +19,17 @@ add_mlir_library(TPPPipeline
 
   LINK_LIBS PUBLIC
     MLIRIR
+    MLIRMeshDialect
+    MLIRSupport
+    MLIRArithValueBoundsOpInterfaceImpl
+    MLIRAsyncTransforms
+    MLIRControlFlowTransforms
+    MLIRShapeOpsTransforms
+    MLIRSparseTensorTransforms
+    MLIRTensorDialect
+    MLIRTensorInferTypeOpInterfaceImpl
+    MLIRTosaDialect
+    MLIRTosaShardingInterfaceImpl
     ${conversion_libs}
     TPPGPU
   )
diff --git a/lib/TPP/Dialect/Transform/CMakeLists.txt b/lib/TPP/Dialect/Transform/CMakeLists.txt
index 106970f..aee2a1f 100644
--- a/lib/TPP/Dialect/Transform/CMakeLists.txt
+++ b/lib/TPP/Dialect/Transform/CMakeLists.txt
@@ -8,6 +8,9 @@ add_mlir_dialect_library(TPPLinalgXTransformOps
   DEPENDS
     TPPCompilerPassIncGen
     TPPLinalgXTransformOpsIncGen
+
+  LINK_LIBS PUBLIC
+    MLIRTransformDialect
 )
 
 target_include_directories(TPPLinalgXTransformOps
diff --git a/lib/TPP/GPU/CMakeLists.txt b/lib/TPP/GPU/CMakeLists.txt
index a82f8cd..c82a669 100644
--- a/lib/TPP/GPU/CMakeLists.txt
+++ b/lib/TPP/GPU/CMakeLists.txt
@@ -24,6 +24,7 @@ add_mlir_library(TPPGPU
   LINK_LIBS PUBLIC
     MLIRGPUDialect
     MLIRGPUTransforms
+    MLIRGPUToSPIRV
     MLIRSCFToGPU
     MLIRSCFToSPIRV
     MLIRMathToSPIRV
diff --git a/scripts/buildkite/build_llvm.sh b/scripts/buildkite/build_llvm.sh
index 2573982..b84908f 100755
--- a/scripts/buildkite/build_llvm.sh
+++ b/scripts/buildkite/build_llvm.sh
@@ -130,7 +130,7 @@ fi
 
 # Check LLVM
 echo "--- CHECK"
-echo_run ninja -C ${LLVM_BUILD_DIR} check-all
+echo_run ninja -C ${LLVM_BUILD_DIR} tpp-check-all
 if [ $? != 0 ]; then
   exit 1
 fi
diff --git a/scripts/ci/build.sh b/scripts/ci/build.sh
index 5a3b92b..cd36810 100755
--- a/scripts/ci/build.sh
+++ b/scripts/ci/build.sh
@@ -9,7 +9,7 @@ source ${SCRIPT_DIR}/ci/common.sh
 die_syntax() {
   echo "Syntax: $0 -b BLD_DIR [-c] [-i] [-p] [-B]"
   echo ""
-  echo "  -c: Optional, runs check-all"
+  echo "  -c: Optional, runs tpp-check-all"
   echo "  -i: Optional, installs"
   echo "  -p: Optional, post-install (copy all build stuff to install dir)"
   echo "  -B: Optional, runs benchmarks"
@@ -28,7 +28,7 @@ while getopts "b:cipB" arg; do
       fi
       ;;
     c)
-      TARGETS="${TARGETS} check-all"
+      TARGETS="${TARGETS} tpp-check-all"
       ;;
     i)
       TARGETS="${TARGETS} install"
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 257b06f..d5bec9c 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -14,10 +14,10 @@ set(TPP_OPT_TEST_DEPENDS
         tpp-run
         )
 
-add_lit_testsuite(check "Running the regression tests"
+add_lit_testsuite(tpp-check "Running the regression tests"
         ${CMAKE_CURRENT_BINARY_DIR}
         DEPENDS ${TPP_OPT_TEST_DEPENDS}
         )
-set_target_properties(check PROPERTIES FOLDER "Tests")
+set_target_properties(tpp-check PROPERTIES FOLDER "Tests")
 
 add_lit_testsuites(TPP_OPT ${CMAKE_CURRENT_SOURCE_DIR} DEPENDS ${TPP_OPT_TEST_DEPENDS})
diff --git a/test/TestLib/CMakeLists.txt b/test/TestLib/CMakeLists.txt
index 10e5c71..44a5af0 100644
--- a/test/TestLib/CMakeLists.txt
+++ b/test/TestLib/CMakeLists.txt
@@ -1,4 +1,7 @@
 add_mlir_library(TPPTestLib
   TestForToForAllRewrite.cpp
   TestMatchers.cpp
+
+  DEPENDS
+  TPPPipeline
   )
